buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        flatDir {
            dirs '../aars'
        }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: "com.jaredsburrows.spoon"
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.jbrunton.mymovies"
        minSdkVersion 24
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.jbrunton.mymovies.fixtures.TestRunner"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'mockito-extensions/org.mockito.plugins.MockMaker'
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':entities')
    implementation project(':app-usecases')
    implementation project(':networking')

    testImplementation project(':fixtures')
    androidTestImplementation project(':fixtures')

    implementation libs.kotlin.core
    implementation libs.kotlin.android
    implementation libs.rx.core
    implementation libs.rx.android

    testImplementation libs.test.core
    testImplementation libs.test.android
    androidTestImplementation libs.test.core
    androidTestImplementation libs.test.android

    implementation 'com.github.jbrunton:mini-container:0.2.0'
    implementation 'com.github.jbrunton:mini-container-android:0.2.0'

    implementation 'com.google.android.material:material:1.0.0-rc02'
    implementation 'androidx.appcompat:appcompat:1.0.0-rc02'
    implementation 'androidx.recyclerview:recyclerview:1.0.0-rc02'
    implementation 'androidx.cardview:cardview:1.0.0-rc02'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'

    def lifecycle_version = "2.0.0"

    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    testImplementation "androidx.arch.core:core-testing:$lifecycle_version"

    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0-alpha4', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation('androidx.test.espresso:espresso-contrib:3.1.0-alpha4')
    androidTestImplementation (name:'cloudtestingscreenshotter_lib', ext:'aar')

    androidTestImplementation 'com.squareup.spoon:spoon-client:2.0.0-SNAPSHOT'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'

    androidTestImplementation 'com.squareup.rx.idler:rx2-idler:0.9.0'

    implementation 'com.squareup.picasso:picasso:2.5.2'

    implementation('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true;
    }

    implementation 'com.google.code.findbugs:jsr305:2.0.1'
    androidTestImplementation 'com.google.code.findbugs:jsr305:2.0.1'
}

repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
    jcenter()
}

spoon {
    failIfNoDeviceConnected = true
    grantAllPermissions = true
}

androidExtensions {
    experimental = true
}

apply plugin: 'kotlin-android-extensions'